name: Docker Build, Push, Security Scan & Notify

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Build and Push Steps ---
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: üê≥ Build & Push Frontend
        working-directory: ./frontend
        run: |
          docker build -t masroorahmed/whatsapp-frontend:latest .
          docker push masroorahmed/whatsapp-frontend:latest

      - name: üê≥ Build & Push Backend
        working-directory: ./backend
        run: |
          docker build -t masroorahmed/whatsapp-backend:latest .
          docker push masroorahmed/whatsapp-backend:latest

      # --- Security CIS Scan ---
      - name: üîí Run Security Compliance Scan
        run: |
          curl -X POST "https://gpzm41gnvh.execute-api.us-east-1.amazonaws.com/security-cis" \
            -H "Content-Type: application/json" \
            -o security-scan-results.json
          
          echo "Security Scan Results:"
          cat security-scan-results.json

      # --- Telegram Notification ---
      - name: üì¢ Send Deployment Notification
        if: always() # Runs even if previous steps fail
        run: |
          # Determine deployment status
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="‚úÖ SUCCESS"
            EMOJI="üöÄ"
          else
            STATUS="‚ùå FAILED"
            EMOJI="üî•"
          fi

          # Get security scan summary
          SCAN_SUMMARY=$(jq -r '.tagged_count, .already_tagged_count, .errors | length' security-scan-results.json | tr '\n' '/')
          
          # Prepare notification payload
          curl -X POST "https://94f742p4pc.execute-api.us-east-1.amazonaws.com/notificationSNS" \
            -H "Content-Type: application/json" \
            -H "x-api-key: ${{ secrets.API_GATEWAY_KEY }}" \
            -d "$(jq -n \
              --arg emoji "$EMOJI" \
              --arg status "$STATUS" \
              --arg time "$(date -u)" \
              --arg commit "${{ github.sha }}" \
              --arg url "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              --arg scan "$SCAN_SUMMARY" \
              '{
                "message": "\($emoji) Docker Deployment - \($status)",
                "details": {
                  "frontend": "masroorahmed/whatsapp-frontend:latest",
                  "backend": "masroorahmed/whatsapp-backend:latest",
                  "status": $status,
                  "time": $time,
                  "commit": $commit,
                  "workflow_url": $url,
                  "security_scan": {
                    "newly_tagged": ($scan | split("/")[0] | tonumber),
                    "already_secured": ($scan | split("/")[1] | tonumber),
                    "errors": ($scan | split("/")[2] | tonumber)
                  }
                }
              }')"
